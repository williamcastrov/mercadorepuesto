import React, { useState, useEffect } from "react";
import Link from "next/link";
import useProduct from "~/hooks/useProduct";
import { myNumber } from "../../../utilities/ArrayFunctions";
import { Box, Grid, Button } from "@mui/material";
import { getLeeIra } from "../../../store/leeira/action";
import { getCancelCondition } from "../../../store/cancelcondition/action";
import { useDispatch, connect, useSelector } from "react-redux";
import MenuPost from "../../partials/shop/modules/MenuPosts";
import Switch from "@mui/material/Switch";
import axios from "axios";
import { useRouter } from "next/router";
import ModalMensajes from "../../../pages/mensajes/ModalMensajes";
import ModalMensajesConfirmarEliminar from "../../../pages/mensajes/ModalMensajesConfirmarEliminar";
import ModuleDetailTabsPosts from "../detail/modules/ModuleDetailTabsPosts";
//Constantes
import { URL_BD_MR, URL_IMAGES_RESULTS } from "../../../helpers/Constants";
import SortByPosts from "../../partials/shop/modules/SortByPosts";

const ProductListPosts = ({ product }) => {
    const router = useRouter();
    const dispatch = useDispatch();
    const { pricesearch, badges } = useProduct();
    const [numeroVisitas, setNumeroVisitas] = useState(0);
    const [selectOptions, setSelectOptions] = useState(0);
    const [estadoMyPosts, setEstadoMyPosts] = useState(
        product.estadopublicacion
    );
    const [showModalMensajes, setShowModalMensajes] = useState(false);
    const [tituloMensajes, setTituloMensajes] = useState(false);
    const [textoMensajes, setTextoMensajes] = useState(false);

    const [showModalMensajesEliminar, setShowModalMensajesEliminar] =
        useState(false);
    const [continuarEliminar, setContinuarEliminar] = useState(false);
    const [abandonarEliminar, setAbandonarEliminar] = useState(false);

    const [login, setLogin] = useState(false);

    // Asignamos Datos al arreglo de Usuarios desde el state
    const datosusuarios = useSelector((state) => state.userlogged.userlogged);
    //console.log("PRODUCT : ", product.id);
    useEffect(() => {
        const visitasPrd = async () => {
            let params = {
                usuario: datosusuarios.uid,
                idproducto: parseInt(product.id),
            };
            //console.log("VISITAS: ", params);
            await axios({
                method: "post",
                url: URL_BD_MR + "71",
                params,
            })
                .then((res) => {
                    setNumeroVisitas(res.data.tolistmyposts.length);
                    console.log("VISITAS: ", res.data.tolistmyposts.length);
                })
                .catch(function (error) {
                    return;
                });
        };
        visitasPrd();
    }, [product.id]);

    useEffect(() => {
        const interval = setInterval(() => {
            if (login) {
                router.push("/loginaccount");
                setLogin(false);
            }
        }, 3000);
        return () => clearInterval(interval);
    }, [login]);

    const onClickImagen = () => {
        dispatch(getLeeIra(6));
        localStorage.setItem("ira", JSON.stringify(6));
        localStorage.setItem("rutaira", JSON.stringify(router.pathname));
        localStorage.setItem("activargrilla", JSON.stringify(1));
    };

    const handleChange = (event) => {
        actualizaPublicacion(0, event.target.checked);
    };

    const actualizaPublicacion = (id, data) => {
        //console.log("EVENT : ", event.target.checked)
        setEstadoMyPosts(data);
        let estadopublicacion = null;

        if (id == 6) {
            estadopublicacion = 10;
        } else if (data) estadopublicacion = 31;
        else estadopublicacion = 0;

        const updatePublication = async () => {
            let params = {
                estadopublicacion: estadopublicacion,
                id: product.id,
            };

            await axios({
                method: "post",
                url: URL_BD_MR + "77",
                params,
            })
                .then((res) => {
                    console.log("DATASAS : ", res.data);
                    if (res.data.type == 1) {
                        if (estadopublicacion == 10) {
                            setShowModalMensajes(true);
                            setTituloMensajes("Actualizar publicación");
                            setTextoMensajes(
                                "Publicación eliminada por el vendedor!"
                            );
                            dispatch(getCancelCondition(1));
                        } else {
                            setShowModalMensajes(true);
                            setTituloMensajes("Actualizar publicación");
                            setTextoMensajes(
                                "Estado de publicación actualizada!"
                            );
                        }
                    } else {
                        setShowModalMensajes(true);
                        setTituloMensajes("Actualizar publicación");
                        setTextoMensajes(
                            "Error, actualizando estado de la publicación!"
                        );
                    }
                })
                .catch(function (error) {
                    setShowModalMensajes(true);
                    setTituloMensajes("Actualizar publicación");
                    setTextoMensajes(
                        "Error, actualizando estado de la publicación!"
                    );
                    return;
                });
        };
        updatePublication();
    };

    useEffect(() => {
        if (selectOptions == 2) {
            let dato = product.id;
            router.push("/product/" + dato);
            setSelectOptions(0);
        } else if (selectOptions == 4) {
            actualizaPublicacion(0, false);
            setSelectOptions(0);
        } else if (selectOptions == 6) {
            confirmarBorrarPublicacion(selectOptions, false);
            setSelectOptions(0);
        }
    }, [selectOptions]);

    const confirmarBorrarPublicacion = (item, estado) => {
        setShowModalMensajesEliminar(true);
        setTituloMensajes("Actualizar publicación");
        setTextoMensajes("¿Estas seguro de querer eliminar la publicación?");
        //continuarRegistro, setContinuarRegistro
    };

    useEffect(() => {
        if (continuarEliminar) {
            actualizaPublicacion(6, false);
        }
    }, [continuarEliminar]);

    return (
        <div className="cajaimagenespostout">
            <ModalMensajes
                shown={showModalMensajes}
                close={setShowModalMensajes}
                titulo={tituloMensajes}
                mensaje={textoMensajes}
                tipo="1"
            />
            <ModalMensajesConfirmarEliminar
                shown={showModalMensajesEliminar}
                setShowModalMensajesEliminar={setShowModalMensajesEliminar}
                setContinuarEliminar={setContinuarEliminar}
                setAbandonarEliminar={setAbandonarEliminar}
                titulo={tituloMensajes}
                mensaje={textoMensajes}
                tipo="1"
            />
            <Grid container spacing={1}>
                <Grid item xs={9} md={9} lg={9}>
                    <Grid container spacing={1}>
                        <Grid item xs={3} md={3} lg={3}>
                            <div
                                className="ps-product__thumbnail cajaimagenespost"
                                onClick={() => onClickImagen()}>
                                <a
                                    href={`/product/${product.id}`}
                                    as={`/product/${product.id}`}>
                                    <img
                                        className="cajaimageresultpost"
                                        src={
                                            URL_IMAGES_RESULTS +
                                            product.images[0].name
                                        }
                                        alt="First slide"
                                    />
                                    {badges(product)}
                                </a>
                            </div>
                        </Grid>
                        <Grid item xs={7} md={7} lg={7}>
                            <div className="cajadatosprdgripposts">
                                <div
                                    className="namegriplistresult"
                                    onClick={() => onClickImagen()}>
                                    <Link
                                        href="/product/[id]"
                                        as={`/product/${product.id}`}>
                                        <div className="colorbase textoposts">
                                            {product.name}
                                        </div>
                                    </Link>
                                </div>
                                <ul className="ps-product__short-desc">
                                    <li className="mt-6">
                                        Id Publicación: {product.compatible}
                                    </li>
                                    <li className="mt-6">
                                        Unidades disponibles :{" "}
                                        {product.numerounidades}
                                    </li>
                                </ul>
                            </div>
                        </Grid>

                        <Grid item xs={2} md={2} lg={2}>
                            <div className="formatopreciogripcuatro">
                                $ {myNumber(1, product.price, 2)}
                            </div>
                            <div className="ml-2 colorbase">
                                <a>Estado</a>
                                <Switch
                                    checked={estadoMyPosts}
                                    onChange={handleChange}
                                />
                            </div>
                        </Grid>
                    </Grid>
                </Grid>

                <Grid item xs={3} md={3} lg={3}>
                    <Grid container spacing={1}>
                        <Grid item xs={12} md={12} lg={12}>
                            <div className="cajamypostestadisticas">
                                <div className="ml-20">
                                    <Grid container spacing={1}>
                                        <Grid item xs={1} md={1} lg={1}>
                                            <div className="divverticalpost"></div>
                                        </Grid>
                                        <Grid item xs={1} md={1} lg={1}>
                                            <div className="ubicarmenupost">
                                                <MenuPost
                                                    selectOptions={
                                                        selectOptions
                                                    }
                                                    setSelectOptions={
                                                        setSelectOptions
                                                    }
                                                />
                                            </div>
                                        </Grid>

                                        <Grid item xs={8} md={8} lg={8}>
                                            <Grid container spacing={1}>
                                                <Grid
                                                    item
                                                    xs={12}
                                                    md={12}
                                                    lg={12}>
                                                    <div className="textopublicaciones pt-20">
                                                        Visitas de la
                                                        publicación:{" "}
                                                        {numeroVisitas}
                                                    </div>
                                                </Grid>

                                                <Grid
                                                    item
                                                    xs={12}
                                                    md={12}
                                                    lg={12}>
                                                    <div className="textopublicaciones">
                                                        Cantidad vendida : 10{" "}
                                                    </div>
                                                </Grid>
                                                <Grid
                                                    item
                                                    xs={12}
                                                    md={12}
                                                    lg={12}>
                                                    <div className="textopublicaciones">
                                                        {estadoMyPosts == 0 ? (
                                                            <div>
                                                                Publicación esta
                                                                Inactiva
                                                            </div>
                                                        ) : (
                                                            <div>
                                                                Publicación esta
                                                                Activa
                                                            </div>
                                                        )}
                                                    </div>
                                                </Grid>
                                            </Grid>
                                        </Grid>
                                    </Grid>
                                </div>
                            </div>
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>
            {product.id == 13 ? (
                <Grid container spacing={1}>
                    <Grid item xs={12} md={12} lg={12}>
                        <div className="cajaverestadisticas">
                            <ModuleDetailTabsPosts product={product}/>
                        </div>
                    </Grid>
                </Grid>
            ) : null}
        </div>
    );
};

export default ProductListPosts;

/*
  <Grid container spacing={1}>
                    <Grid>
                        <h1>PRUEBA</h1>
                    </Grid>
                </Grid>
*/
